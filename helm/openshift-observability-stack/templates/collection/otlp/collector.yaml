{{- if .Values.collection.otlp.enabled }}
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otlp
  namespace: openshift-observability
spec:
  mode: daemonset
  replicas: {{ .Values.collection.otlp.replicas }}
  env:
  - name: KUBE_NODE_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
  # this OTEL collector instance must be stateless
  config:
    receivers:
      otlp:
        protocols:
          grpc: {}
          http: {}

    extensions:
      bearertokenauth:
        filename: /var/run/secrets/kubernetes.io/serviceaccount/token

    connectors:
      spanmetrics:
        dimensions:
        - name: k8s.namespace.name

    processors:
      k8sattributes:
        filter:
          node_from_env_var: KUBE_NODE_NAME

      resource/logs:
        attributes:
        - key: loki.format
          action: insert
          value: json
        - key:  kubernetes_namespace_name
          from_attribute: k8s.namespace.name
          action: upsert
        - key:  kubernetes_pod_name
          from_attribute: k8s.pod.name
          action: upsert
        - key: kubernetes_container_name
          from_attribute: k8s.container.name
          action: upsert
        - key: log_type
          value: application
          action: upsert
        - key: loki.resource.labels
          value: log_type, kubernetes_namespace_name, kubernetes_pod_name, kubernetes_container_name
          action: insert

      transform/logs:
        log_statements:
        - context: log
          statements:
            - set(attributes["level"], ConvertCase(severity_text, "lower"))

    exporters:
      otlphttp/prometheus:
        endpoint: http://openshift-monitoring-prometheus.openshift-observability:9090/api/v1/otlp

      # doesn't print any error but also doesn't ingest logs (?) when using otlphttp/loki
      #otlphttp/loki:
      #  endpoint: https://logging-loki-gateway-http.openshift-logging.svc.cluster.local:8080/api/logs/v1/application/otlp
      #  tls:
      #    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
      #  auth:
      #    authenticator: bearertokenauth
      loki:
        endpoint: https://logging-loki-gateway-http.openshift-logging.svc.cluster.local:8080/api/logs/v1/application/loki/api/v1/push
        tls:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        auth:
          authenticator: bearertokenauth

      otlp/tempo:
        endpoint: tempo-openshift-tracing-gateway.openshift-observability.svc:8090
        tls:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        auth:
          authenticator: bearertokenauth
        headers:
          X-Scope-OrgID: application

      debug:
        verbosity: detailed

    service:
      extensions: [bearertokenauth]
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [k8sattributes]
          exporters: [otlphttp/prometheus, debug]

        logs:
          receivers: [otlp]
          processors: [k8sattributes, transform/logs, resource/logs]
          exporters: [loki]

        traces:
          receivers: [otlp]
          processors: [k8sattributes]
          exporters: [spanmetrics, otlp/tempo]
        metrics/spanmetrics:
          receivers: [spanmetrics]
          processors: []
          exporters: [otlphttp/prometheus]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openshift-observability-otlp-collector-k8sattributes
roleRef:
  kind: ClusterRole
  name: openshift-observability-k8sattributes-processor
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: otlp-collector
  namespace: openshift-observability
---
# write logs and traces to 'application' tenant
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openshift-observability-otlp-collector
rules:
- apiGroups: [loki.grafana.com]
  resourceNames: [logs]
  verbs: [create]
  resources: [application]
- apiGroups: [tempo.grafana.com]
  resourceNames: [traces]
  verbs: [create]
  resources: [application]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openshift-observability-otlp-collector
roleRef:
  kind: ClusterRole
  name: openshift-observability-otlp-collector
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: otlp-collector
  namespace: openshift-observability
{{- end }}
